local common = @record{}

local r = require "./resources.nelua"
local s = require "string"
local t = require "taca"

local common.Instance = @record{
  offset: [2]float32,
  scale: [2]float32,
  source_offset: [2]float32,
  source_scale: [2]float32,
}

local common.Uniforms = @record{
  aspect: [2]float32,
  pad: [2]float32,
}

local common.TextureBindings = @record{
  bindings: t.Bindings,
  texture: t.Texture,
}

local common.Game = @record{
  back_bindings: common.TextureBindings,
  box_index: t.Buffer,
  box_instance: t.Buffer,
  box_vertex: t.Buffer,
  gem_bindings: common.TextureBindings,
  init_finished: boolean,
  max_instances: usize,
  middle_bindings: common.TextureBindings,
  player_bindings: common.TextureBindings,
  tiles_bindings: common.TextureBindings,
  uniforms: common.Uniforms,
  uniforms_buffer: t.Buffer,
}

function common.as_bytes(items: auto): span(byte)
  return {data = (@pointer([0]byte))(items.data), size = items:sizebytes()}
end

function common.print_frames(name: string, frames: span(r.Rect))
  t.print(name)
  for i, frame in ipairs(frames) do
    t.print(s.format(
      "frame %i: %d %d %d %d",
      i,
      frame.pos[0], frame.pos[1],
      frame.size[0], frame.size[1]
    ))
  end
end

return common
