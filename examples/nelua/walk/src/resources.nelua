require "support"

## local fs = require "nelua.utils.fs"
## local gd = require "gd"
## local macros = require "macros"

-- TODO Make resource paths relative to this source file.
## local src = fs.scriptdir()
print(#[src]#)

local c = require "./common.nelua"
local d = require "./draw.nelua"

local resources = @record{}

## local tiles_scene = gd.resource_load("src/tiles/tiles.tscn")

local PlayerInfo = @record{
  image: span(byte),
  run: vector(d.Rect),
}
local resources.PlayerInfo = PlayerInfo

local GemInfo = @record{
  image: span(byte),
  shine: vector(d.Rect),
}
local resources.GemInfo = GemInfo

local resources.back: span(byte) = #[read_all "src/tiles/back.png"]#
local resources.back_offset: [2]float32 = {
  #[tiles_scene["Back"]["body"]["position"]["args"][1]]#,
  #[tiles_scene["Back"]["body"]["position"]["args"][2]]#,
}

## local gem_resource = gd.resource_load("src/tiles/gem.tres")
local resources.gem = GemInfo{
  image = #[read_all "src/tiles/gem.png"]#,
  shine = #[macros.animation_build(gem_resource, "shine")]#,
}

local resources.level = #[read_all "src/tiles/tiles.tscn"]#

local resources.middle: span(byte) = #[read_all "src/tiles/middle.png"]#
local resources.middle_offset: [2]float32 = {
  #[tiles_scene["Middle"]["body"]["position"]["args"][1]]#,
  #[tiles_scene["Middle"]["body"]["position"]["args"][2]]#,
}

## local player_resource = gd.resource_load("src/tiles/player.tres")
local resources.player = PlayerInfo{
  image = #[read_all "src/tiles/player.png"]#,
  run = #[macros.animation_build(player_resource, "run")]#,
}

## local display = gd.resource_load("src/tiles/project.godot").display.body
local resources.viewport_size: [2]float32 = {
  #[display["window/size/viewport_width"]]#,
  #[display["window/size/viewport_height"]]#,
}

local resources.shader: span(byte) = #[read_all "out/shader.spv"]#

local resources.tiles: span(byte) = #[read_all "src/tiles/tileset.png"]#
local resources.tile_map: span(byte) = #[gd.base64_decode(
  tiles_scene["TileMapLayer"]["body"]["tile_map_data"]["args"][1]
)]#

return resources
